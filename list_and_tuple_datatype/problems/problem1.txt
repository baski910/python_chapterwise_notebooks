1. Write a function that returns True if two arrays, when combined, 
form a consecutive sequence. A consecutive sequence is a sequence without 
any gaps in the integers, e.g. 1, 2, 3, 4, 5 is a consecutive sequence, 
but 1, 2, 4, 5 is not.

2. check if the given string is balance. The string will have only {,},(,),[,} characters
s1 = "{{[]}(){}}"
Sol:
def checkString(s1):  # "{[]}(){}}"
    s = []
    d = {'{':'}','(':')','[':']'}
    for char in s1:
        if char in d:
            s.append(char)
        else:
            t = s.pop()
            if char != d[t]:
                return False
    return True

3. Find the highest sum of adjacent numbers in the below list
list1 = [8,-6,9,3,12,7,4]
Sol:
max_sum = 0

print(max_sum)

for i in range(len(list1) - 1):
  current_sum = list1[i] + list1[i + 1]
  if current_sum > max_sum:
    max_sum = current_sum

print("The highest sum of adjacent numbers is:", max_sum)

4 given a list of list with each inner list of equal size in sorted order. 
Find minimum element that is present in all inner list. For example given the 
list [[2,3,4,6,8],[1,2,4,6,9],[3,4,5,6,7],[2,5,6,8,9]] the answer will be 6
Sol:
def returnCommon(list1):
    list_of_list =[set(x) for x in list1]
    c = list_of_list[0]
    for i in range(1,len(list_of_list)-1):
        c = c & list_of_list[i+1]
    
    print(c)

5. A number is perfect if all the digits of the number are its divisors. Example 144 can be divided by 1,4 and 4 but 142 can only be divided by 2



